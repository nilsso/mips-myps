tankC = d0
tankH = d1
tTSrc = d2
pTSrc = d3
nCPump = d4
nHPump = d5

def PipeAnalyzer = 435685051
def AdvFurnace = 545937711
def vF = 1000
def R = 8.314

def vCFactor = 6100 / 6000
def vHFactor = 6100 / 6000

loop:
    yield()
    if db.Setting != 0:
        # (a) batch read temperature and pressure from furnace (tF/pF)
        db.Setting = 2
        yield()
        nF = AdvFurnace.all.TotalMoles.avg
        tF = AdvFurnace.all.Temperature.avg
        pF = AdvFurnace.all.Pressure.avg

        # (b) read tank temperatures
        db.Setting = 3
        yield()
        tC = tankC.Temperature
        tH = tankH.Temperature

        # (c) read targets (tT/pT),
        db.Setting = 4
        yield()
        tT = tTSrc.Setting
        pT = pTSrc.Setting

        # (d) calculate moles to remove and add from C and H (nR/nC/nH)
        db.Setting = 5
        yield()
        # TODO: Scopes need to be restricted better?...
        fix rF, rC, rH
        tag calcMolesTargets:
            nT = pT * vF / (R * tT)
            nRC = nT * (tT - tH) / (tH - tF) + nF
            nRH = nT * (tT - tC) / (tC - tF) + nF
            #nRH = nT * (tC - tT) / (tF - tC) + nF
            nR = max(0, min(nRC, nRH))
            nI = nT - nF + nR
            tI = (tT * nT - tF * (nF - nR)) / nI
            nHI = nI * (tC - tI) / (tC - tH)
            nCI = nI - nHI # nCI

            nC = vCFactor * tankC.TotalMoles # calc C moles
            nH = vHFactor * tankH.TotalMoles # calc H moles

            rF = nF - nR # calc F target (rF)
            rC = nC - nCI # calc C target (rC
            rH = nH - nHI # calc H target (rH)

        # (e) remove nR, mix nC and nH
        db.Setting = 6
        yield()
        def kP = 0.06
        def kD = 0.02
        def dt = 0.5
        def ERROR = 0.3

        # TODO: To nR FIRST, then nC and nH with input turned on. that way don't blow the mix section

        yield()
        nCPump.On = 1
        nHPump.On = 1
        fix eF = nF - rF # fix F error (nF - rF)
        fix eC = nC - rC # fix C error (nC - rC)
        fix eH = nH - rH # fix H error (nH - rH)
        fix eFPrev = 0 # fix F error (prev)
        fix eCPrev = 0 # fix C error (prev)
        fix eHPrev = 0 # fix H error (prev)
        db.Setting = eF
        yield()
        db.Setting = eC
        yield()
        db.Setting = eH
        yield()
        db.Setting = 999
        yield()
        while eF > ERROR or eC > ERROR or eH > ERROR:
            db.Setting = 1234
            yield()
            uF = (kP * eF) + (kD * (eF - eFPrev) / dt)
            AdvFurnace.all.SettingOutput = uF # set furnace out

            uC = (kP * eC) + (kD * (eC - eCPrev) / dt)
            nCPump.Setting = uC # set C pump

            uH = (kP * eH) + (kD * (eH - eHPrev) / dt)
            nHPump.Setting = uH # set H pump

            eFPrev = eF # save F error
            eCPrev = eC # save C error
            eHPrev = eH # save H error

            yield()
            nF = AdvFurnace.all.TotalMoles.avg
            nC = vCFactor * tankC.TotalMoles
            nH = vHFactor * tankH.TotalMoles
            eF = nF - rF
            eC = nC - rC
            eH = nH - rH
        nCPump.On = 0
        nHPump.On = 0

        # (f) input the nC and nH gas (can the necessary run time be calculated?)
        db.Setting = 7
        yield()
        AdvFurnace.all.SettingInput = 100
        while PipeAnalyzer.all.TotalMoles.avg > 0:
            yield()
        AdvFurnace.all.SettingInput = 0

        # (g) enjoy
        db.Setting = 0