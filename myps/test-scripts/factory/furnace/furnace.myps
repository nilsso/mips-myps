#furnace = d0
#nIAnlzr = d5

tankC   = d0
tankH   = d1
nCPump  = d2
nHPump  = d3
progressDest = d4

def vF = 1000  # furnace volume
def R  = 8.314 # universal gas consant
def dt = 0.5   # time step

# Source volume-mole factor (adjust per setup)
# e.g. 6100  = 1 furnace (6000) + 2 pipes (200) L
def nCfactor = (6200) / 6000
def nHfactor = (6200) / 6000

# PD coefficients and minimum error (perhaps adjust)
def kPF = 0.09
def kDF = 0.06

def kPC = 0.09
def kDC = 0.06

def kPH = 0.09
def kDH = 0.06

def ERRORF = 0.01
def ERRORC = 0.03
def ERRORH = 0.03

# Input target temperature/pressure format: PPPTTT
# ```
# input = db.Setting
# tT    = input % 1000 * 10 K
# input = trunc(input / 1000)
# pT    = input * 100 kPa
# ```
# e.g. 500050 -> tT = 50*10 = 500 K, pT = 500*100 = 50,000 kPa
loop:
    input = db.Setting
    if input < 0:
        db.Setting = 0
    elif input > 0:
        # (a) unpack input temperature and pressure

        # (b) batch read temperature and pressure from furnace (tF/pF)

        # (c) read tank temperatures

        # (d) calculate moles to remove and add from C and H (nR/nC/nH)
        fix rF, rC, rH, eFPrev, eCPrev, eHPrev
        tag calcMolesTargets:
            input = trunc(input)
            tT = (input % 1000) * 10
            pT = trunc(input / 1000) * 100
            nF = furnace.TotalMoles
            tF = furnace.Temperature
            tC = tankC.Temperature
            tH = tankH.Temperature

            nT = pT * vF / (R * tT)
            nRC = nT * (tT - tH) / (tH - tF) + nF
            nRH = nT * (tT - tC) / (tC - tF) + nF
            nR = max(0, max(nRC, nRH))
            nI = nT - nF + nR
            tI = (tT * nT - tF * (nF - nR)) / nI
            nHI = nI * (tC - tI) / (tC - tH)
            nCI = nI - nHI

            rF = nF - nR
            eFPrev = nF - rF

            nC = nCfactor * tankC.TotalMoles
            rC = nC - nCI
            eCPrev = nC - rC

            nH = nHfactor * tankH.TotalMoles
            rH = nH - nHI
            eHPrev = nH - rH

        # (e) remove nR, mix nC and nH
        tag E:
            # triple PD loop! controls reaching rF/C/H moles in F/C/H
            # if rF is reached, start inputting the nI mixture in advance to (f)
            tag PDLoop:
                yield()
                nF = furnace.TotalMoles
                eF = nF - rF
                uF = max(0, min(100, (kPF * eF) + (kDF * (eF - eFPrev) / dt))) # (kPF, kDF)
                #uF = (kPF * eF) + (kDF * (eF - eFPrev) / dt) # (kPF, kDF)
                eFPrev = eF

                nC = nCfactor * tankC.TotalMoles
                eC = nC - rC
                #uC = max(0, min(100, (kPC * eC) + (kDC * (eC - eCPrev) / dt))) # (kPC, kDC)
                uC = (kPC * eC) + (kDC * (eC - eCPrev) / dt) # (kPC, kDC)
                eCPrev = eC

                nH = nHfactor * tankH.TotalMoles
                eH = nH - rH
                #uH = max(0, min(100, (kPH * eH) + (kDH * (eH - eHPrev) / dt)))  # (kPH, kDH)
                uH = (kPH * eH) + (kDH * (eH - eHPrev) / dt) # (kPH, kDH)
                eHPrev = eH

                FNotDone = (eF > ERRORF)
                CNotDone = (eC > ERRORC)
                HNotDone = (eH > ERRORH)

                furnace.SettingOutput  = FNotDone ? uF : 0
                #furnace.SettingInput  = FNotDone ? 0  : 1000
                nCPump.Setting         = CNotDone ? uC : 0
                nHPump.Setting         = HNotDone ? uH : 0

                nCPump.On = CNotDone
                nHPump.On = HNotDone

                bnez(FNotDone, PDLoop)
                bnez(CNotDone, PDLoop)
                bnez(HNotDone, PDLoop)

        # (g) input the nC and nH gas
        furnace.SettingInput  = 1000
        while nIAnlzr.TotalMoles > 0:
            yield()
        furnace.SettingInput = 0

        # (?) enjoy
        db.Setting = 0
