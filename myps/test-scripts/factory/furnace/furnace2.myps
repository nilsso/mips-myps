# NOTE: To start operation, write a "value" greater than zero to the housing. This value is taken to
# be a code for the target temperature and pressure with the format `PPPTTT`, where tT=TTT*10$ and
# pT=PPP*100.
#
# e.g. 500050 -> tT = 050*10 = 500 K, pT = 500*100 = 50,000 kPa = 50 MPa
#
# IMPORTANT: Validation for this input is not done here, and the program will attempt to use
# whatever it is given. If the target temperature is less-than the cold source temperature or
# greater than the hot source temperature then wackiness will certainly occurr!
# (I may change this point in the future)
furnace    = d0
tankC      = d1
tankH      = d2
nCPump     = d3
nHPump     = d4
nIAnalyzer = d5

# Constants
def vF = 1000             # furnace volume
def R  = 8.31446261815324 # universal gas consant
def dt = 0.5              # time step

# (NOTE: ADJUST PER SETUP)
# Source volume-mole factor
# e.g. 6100  = 1 furnace (6000) + 2 pipes (200) L
# (TODO: Need to implement defines calculated from other defines)
def vC = 50100
def vH = 50100
def nCfactor = (50100) / 50000
def nHfactor = (50100) / 50000

# (NOTE: MAY NEED TO ADJUST)
# PD (proportional, derivative) term coefficients
def kPF = 0.01
def kDF = 0
def kPC = 0.1
def kDC = 0
def kPH = 0.1
def kDH = 0

# Acceptable error amounts for
# (a) the removal of gas from the furnace,
# (b) the transfer of cold CO2 (i.e. removal from source)
# (c) the transfer of hot CO2
def ERRORF = 0.001
def ERRORC = 0.001
def ERRORH = 0.001

db.Setting = -1
furnace.SettingInput = 0
furnace.SettingOutput = 0
loop:
    yield()
    input = db.Setting
    if input <= 0:
        db.Setting = -1
    else:
        db.Setting = 0
        fix rF, rC, rH
        tag calcMolesTargets:
            # (a) unpack input target temperature and pressure (tT/pT)
            input = trunc(input)
            tT = (input % 1000) * 10
            pT = trunc(input / 1000) * 100

            # (b) read furnace moles and temperature (nF/tF)
            nF = furnace.TotalMoles
            tF = furnace.Temperature

            # (c) read tank temperatures (tC/tH)
            tC = tankC.Temperature
            tH = tankH.Temperature

            # (d) calculate moles to remove and add from C and H (nR/nCI/nHI)
            nT = pT * vF / (R * tT)
            nRC = nT * (tT - tH) / (tH - tF) + nF
            nRH = nT * (tT - tC) / (tC - tF) + nF
            nR = max(0, max(nRC, nRH))

            rF = (nF - nR) * R * tF / vF

            nI = nT - nF + nR
            tI = (tT * nT - tF * (nF - nR)) / nI
            nHI = nI * (tC - tI) / (tC - tH)

            nH = nHfactor * tankH.TotalMoles
            rH = (nH - nHI) * R * tH / vH

            nCI = nI - nHI

            nC = nCfactor * tankC.TotalMoles
            rC = (nC - nCI) * R * tC / vC

        # TODO: These rates are all fucked up
        tag MolesLoop:
            yield()
            pF = furnace.Pressure
            eF = pF - rF
            vF = max(0, min(1000, eF))
            FNotDone = eF > ERRORF
            furnace.SettingOutput = FNotDone ? vF : 0

            pC = tankC.Pressure
            eC = pC - rC
            vC = max(0, min(1000, eC))
            CNotDone = eC > ERRORC
            nCPump.Setting = CNotDone ? vC : 0
            nCPump.On      = CNotDone ? 1  : 0

            pH = tankH.Pressure
            eH = pH - rH
            vH = max(0, min(1000, eH))
            db.Setting = eH
            HNotDone = (eH > ERRORH)
            nHPump.Setting = HNotDone ? vH : 0
            nHPump.On      = HNotDone ? 1  : 0

            bnez(FNotDone, MolesLoop)
            bnez(CNotDone, MolesLoop)
            bnez(HNotDone, MolesLoop)

        # (g) input the nC and nH gas
        # NOTE: As mentioned previously, furnace.SettingInput is currently unbounded when set by
        # logic. Using this to cheat here and instantly fill the furnace volume from the mixer
        # system by setting the input rate to be equal to the mixer system volume.
        furnace.SettingInput  = 1000
        while nIAnalyzer.TotalMoles > 0:
            yield()
        furnace.SettingInput = 0

        # (?) enjoy
        db.Setting = -1
