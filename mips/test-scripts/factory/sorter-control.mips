# Factory - Sorter
alias sorter d0
alias downMem d1
alias selfMem d2
alias upMem db

alias downReq r0 # [FIX]
alias selfReq r1 # [FIX]
alias needOr r2 # [FIX]
alias orWord r3 # [FIX]
alias i r4 # [FIX]

alias downWord r5
alias selfWord r6
alias downBit r7
alias selfBit r8
alias orBit r9

alias hash r10
alias x r11

s sorter On 1
s sorter Mode 2
s db Setting 0 # ?

main:
yield

checkDown:
bdns downMem checkSelf # skip if downMem unset
l x downMem Setting # get down request
beq x downReq checkSelf # skip if unchanged
move downReq x # else set request and trigger bit-or
move needOr 1

# WARNING: Assuming that this sorter's fabricator control is set
checkSelf:
l x selfMem Setting # get self request
beq x selfReq bitOrWords # skip if unchanged
move selfReq x # else set request and trigger udpate
move needOr 1

bitOrWords:
beqz needOr sort # skip if bit-or not triggered
move downWord downReq # (bit-or start)
move selfWord selfReq
move orWord 0 # (bit-or start)
move i 1 # i = 1 = 2^n where n=0

bitOrLoop:
mod downBit downWord 2 # down word ls-bit (bit-or loop start)
div downWord downWord 2 # right-shift down word
trunc downWord downWord

mod selfBit selfWord 2 # least-significant bit of self word
div selfWord selfWord 2 # right-shift self word
trunc selfWord selfWord

or orBit downBit selfBit # or the bits
mul orBit i orBit # make or-bit a power of 2
add orWord orBit orWord # add to or word

mul i 2 i # i = 2^(n+1)
bgtz downWord bitOrLoop # continue until words are zero
bgtz selfWord bitOrLoop
move needOr 0 # (bit-or loop end)

s upMem Setting orWord # send or'd requests up

sort:
ls hash sorter 0 OccupantHash # (sort start)
beqz hash main # skip to top if nothing to sort

getBitPosition:
move x 1 # 1 = 2^0 (get item bit position start)
beq hash -404336834 extractBit # copper
move x 2
beq hash 226410516 extractBit # gold
move x 4
beq hash -1301215609 extractBit # iron
move x 8
beq hash 2134647745 extractBit # lead
move x 16
beq hash -1406385572 extractBit # nickel
move x 32
beq hash -290196476 extractBit # silicon
move x 64
beq hash -929742000 extractBit # silver
move x 128
beq hash 1058547521 extractBit # constantan
move x 256
beq hash 502280180 extractBit # electrum
move x 512
beq hash -297990285 extractBit #invar
move x 1024
beq hash -82508479 extractBit # solder
move x 2048
beq hash -654790771 extractBit # steel
move x 4096
beq hash 412924554 extractBit # astroloy
move x 8192
beq hash 1579842814 extractBit # hastelloy
move x 16384
beq hash -787796599 extractBit # inconel
move x 32768
beq hash -1897868623 extractBit # stellite
move x 65536
beq hash 156348098 extractBit # waspaloy
move x 131072
beq hash 1724793494 extractBit # ore (coal)
move x 262144
beq hash -983091249 extractBit # ore (cobalt)
move x 1 # unrecognized item, sort left=1
j setOutput # (get item bit position end)

extractBit:
div x selfReq x # extract self request bit
trunc x x
mod x x 2
seqz x x

setOutput:
s sorter Output x # sort right=0 if self requested, else left=0

j main # (main end)
